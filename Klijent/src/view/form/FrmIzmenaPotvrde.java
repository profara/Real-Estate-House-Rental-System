/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view.form;


import domen.Izdavanje;
import domen.Klijent;
import domen.PotvrdaOIzdavanju;
import domen.Stan;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import kontroler.Kontroler;
import modeliTabele.TableModelTermini;

/**
 *
 * @author Alek
 */
public class FrmIzmenaPotvrde extends javax.swing.JDialog {

    private PotvrdaOIzdavanju potvrda;
    private List<Izdavanje> izdavanja;

    /**
     * Creates new form FrmIzmenaPotvrde
     */
    public FrmIzmenaPotvrde(java.awt.Frame parent, boolean modal, PotvrdaOIzdavanju potvrda) {
        super(parent, modal);
        initComponents();
        this.potvrda = potvrda;
        izdavanja = potvrda.getIzdavanja();
        setLocationRelativeTo(parent);
        try {
            srediFormu();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error in view initialization: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblPotvrdaID = new javax.swing.JLabel();
        txtPotvrdaID = new javax.swing.JTextField();
        lblCena = new javax.swing.JLabel();
        txtCena = new javax.swing.JTextField();
        lblErrorCena = new javax.swing.JLabel();
        lblKlijent = new javax.swing.JLabel();
        cmbKlijent = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTermini = new javax.swing.JTable();
        lblStan = new javax.swing.JLabel();
        cmbStan = new javax.swing.JComboBox();
        lblDatumOd = new javax.swing.JLabel();
        DatumOd = new com.toedter.calendar.JDateChooser();
        lblDatumDo = new javax.swing.JLabel();
        DatumDo = new com.toedter.calendar.JDateChooser();
        lblVreme = new javax.swing.JLabel();
        cmbVreme = new javax.swing.JComboBox<>();
        lblErrorDatumOd = new javax.swing.JLabel();
        lblErrorDatumDo = new javax.swing.JLabel();
        btnKreirajIzdavanje = new javax.swing.JButton();
        btnObrisiIzdavanje = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();
        btnOdustani = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Izmena potvrde");

        lblPotvrdaID.setText("ID:");

        txtPotvrdaID.setEditable(false);

        lblCena.setText("Cena:");

        lblErrorCena.setForeground(new java.awt.Color(255, 0, 0));
        lblErrorCena.setText("jLabel1");

        lblKlijent.setText("Klijent:");

        cmbKlijent.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Unos termina izdavanja"));

        tblTermini.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblTermini);

        lblStan.setText("Stan:");

        cmbStan.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblDatumOd.setText("Datum od:");

        lblDatumDo.setText("Datum do:");

        lblVreme.setText("Vreme");

        cmbVreme.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblErrorDatumOd.setForeground(new java.awt.Color(255, 0, 0));
        lblErrorDatumOd.setText("jLabel1");

        lblErrorDatumDo.setForeground(new java.awt.Color(255, 0, 0));
        lblErrorDatumDo.setText("jLabel1");

        btnKreirajIzdavanje.setText("Dodaj termin");
        btnKreirajIzdavanje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKreirajIzdavanjeActionPerformed(evt);
            }
        });

        btnObrisiIzdavanje.setText("Obrisi termin");
        btnObrisiIzdavanje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiIzdavanjeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblVreme, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblDatumOd, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblStan, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblDatumDo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbStan, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DatumOd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DatumDo, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                            .addComponent(cmbVreme, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblErrorDatumOd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblErrorDatumDo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(btnObrisiIzdavanje, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(btnKreirajIzdavanje)
                                .addContainerGap())))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStan)
                    .addComponent(cmbStan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblErrorDatumOd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DatumOd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblDatumOd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(DatumDo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblDatumDo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(lblErrorDatumDo))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVreme)
                    .addComponent(cmbVreme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnKreirajIzdavanje)
                    .addComponent(btnObrisiIzdavanje))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnIzmeni.setText("Izmeni");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        btnOdustani.setText("Odustani");
        btnOdustani.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOdustaniActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnOdustani)
                        .addGap(18, 18, 18)
                        .addComponent(btnIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblPotvrdaID, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtPotvrdaID))
                        .addComponent(lblErrorCena)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lblKlijent, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblCena, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cmbKlijent, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtCena)))))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPotvrdaID)
                    .addComponent(txtPotvrdaID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCena)
                    .addComponent(txtCena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblErrorCena)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblKlijent)
                    .addComponent(cmbKlijent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIzmeni)
                    .addComponent(btnOdustani))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnKreirajIzdavanjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKreirajIzdavanjeActionPerformed
        if (validacijaTermin()) {
            return;
        }

        potvrda.setKlijent((Klijent) cmbKlijent.getSelectedItem());
        Stan stan = (Stan) cmbStan.getSelectedItem();
        Date datumOd = DatumOd.getDate();
        Date datumDo = DatumDo.getDate();
        String vreme = (String) cmbVreme.getSelectedItem();

        Izdavanje izdavanje = new Izdavanje(datumOd, datumDo, vreme, stan, potvrda);
        izdavanja.add(izdavanje);
        JOptionPane.showMessageDialog(this, "Uspesno kreiran termin!");
        TableModelTermini tmt = (TableModelTermini) tblTermini.getModel();
        tmt.fireTableDataChanged();
    }//GEN-LAST:event_btnKreirajIzdavanjeActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
       if (validacijaPotvrda()) {
            return;
        }

        Double cena = Double.parseDouble(txtCena.getText().trim());
        Klijent klijent = (Klijent) cmbKlijent.getSelectedItem();
        potvrda.setIzdavanja(izdavanja);
        potvrda.setCena(cena);
        potvrda.setKlijent(klijent);
        
        
        try {
            Kontroler.getInstance().izmeniPotvrdu(potvrda);
            JOptionPane.showMessageDialog(this, "Potvrda je uspesno sacuvana!");
            this.dispose();
        } catch (Exception ex) {
             JOptionPane.showMessageDialog(this, "Neuspesan unos potvrde!\n" + ex.getMessage(), "Greska", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void btnObrisiIzdavanjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiIzdavanjeActionPerformed
        int selected = tblTermini.getSelectedRow();
        
        if(selected != -1){
            TableModelTermini tmt = (TableModelTermini) tblTermini.getModel();
            tmt.obrisiTermin(selected);
            
        }
    }//GEN-LAST:event_btnObrisiIzdavanjeActionPerformed

    private void btnOdustaniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOdustaniActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnOdustaniActionPerformed

    private void srediFormu() throws Exception {
        lblErrorCena.setVisible(false);
        lblErrorDatumOd.setVisible(false);
        lblErrorDatumDo.setVisible(false);

        popuniCmbKlijenti();
        popuniCmbStanovi();
        popuniCmbVreme();
        
        postaviVrednosti();
        
        TableModelTermini tmt = new TableModelTermini(izdavanja);
        tblTermini.setModel(tmt);

       

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DatumDo;
    private com.toedter.calendar.JDateChooser DatumOd;
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnKreirajIzdavanje;
    private javax.swing.JButton btnObrisiIzdavanje;
    private javax.swing.JButton btnOdustani;
    private javax.swing.JComboBox cmbKlijent;
    private javax.swing.JComboBox cmbStan;
    private javax.swing.JComboBox<String> cmbVreme;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCena;
    private javax.swing.JLabel lblDatumDo;
    private javax.swing.JLabel lblDatumOd;
    private javax.swing.JLabel lblErrorCena;
    private javax.swing.JLabel lblErrorDatumDo;
    private javax.swing.JLabel lblErrorDatumOd;
    private javax.swing.JLabel lblKlijent;
    private javax.swing.JLabel lblPotvrdaID;
    private javax.swing.JLabel lblStan;
    private javax.swing.JLabel lblVreme;
    private javax.swing.JTable tblTermini;
    private javax.swing.JTextField txtCena;
    private javax.swing.JTextField txtPotvrdaID;
    // End of variables declaration//GEN-END:variables

    private void postaviVrednosti() {
        txtPotvrdaID.setText(String.valueOf(potvrda.getPotvrdaID()));
        txtCena.setText(String.valueOf(potvrda.getCena()));
        cmbKlijent.setSelectedItem(potvrda.getKlijent());
        
    }

    private void popuniCmbKlijenti() throws Exception {
        cmbKlijent.removeAllItems();
        List<Klijent> klijenti = Kontroler.getInstance().getKlijenti();
        for (Klijent k : klijenti) {
            cmbKlijent.addItem(k);
        }
    }

    private void popuniCmbStanovi() throws Exception {
        cmbStan.removeAllItems();
        List<Stan> stanovi = Kontroler.getInstance().getStanovi();
        for (Stan stan : stanovi) {
            cmbStan.addItem(stan);
        }
    }

    private void popuniCmbVreme() {
        cmbVreme.removeAllItems();

        cmbVreme.addItem("00:00");
        cmbVreme.addItem("01:00");
        cmbVreme.addItem("02:00");
        cmbVreme.addItem("03:00");
        cmbVreme.addItem("04:00");
        cmbVreme.addItem("05:00");
        cmbVreme.addItem("06:00");
        cmbVreme.addItem("07:00");
        cmbVreme.addItem("08:00");
        cmbVreme.addItem("09:00");
        cmbVreme.addItem("10:00");
        cmbVreme.addItem("11:00");
        cmbVreme.addItem("12:00");
        cmbVreme.addItem("13:00");
        cmbVreme.addItem("14:00");
        cmbVreme.addItem("15:00");
        cmbVreme.addItem("16:00");
        cmbVreme.addItem("17:00");
        cmbVreme.addItem("18:00");
        cmbVreme.addItem("19:00");
        cmbVreme.addItem("20:00");
        cmbVreme.addItem("21:00");
        cmbVreme.addItem("22:00");
        cmbVreme.addItem("23:00");
    }

    private boolean validacijaTermin() {
        boolean flag = false;

        if (DatumOd.getDate() == null) {
            lblErrorDatumOd.setText("Unesite datum od!");
            lblErrorDatumOd.setVisible(true);
            flag = true;
        } else if (DatumOd.getDate().before(new Date())) {
            lblErrorDatumOd.setText("Datum mora biti tekuci!");
            lblErrorDatumOd.setVisible(true);
            flag = true;
        }

        if (DatumDo.getDate() == null) {
            lblErrorDatumDo.setText("Unesite datum do!");
            lblErrorDatumDo.setVisible(true);
            flag = true;
        } else if (DatumOd.getDate() != null && DatumDo.getDate().before(DatumOd.getDate())) {
            lblErrorDatumDo.setText("Datum do mora biti posle datuma od!");
            lblErrorDatumDo.setVisible(true);
            flag = true;
        }

        return flag;
    }

    private boolean validacijaPotvrda() {
        boolean flag = false;
        
        if (txtCena.getText().isEmpty()) {
            lblErrorCena.setText("Unesite cenu!");
            lblErrorCena.setVisible(true);
            flag = true;
        } else if (Double.parseDouble(txtCena.getText()) < 0) {
            lblErrorCena.setText("Cena ne sme biti negativna!");
            lblErrorCena.setVisible(true);
            flag = true;
        }
        
        return flag;
    }

}
